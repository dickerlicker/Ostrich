# Generated by Django 2.0.7 on 2018-08-08 01:56

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FakeStudentGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'StudentGroup',
            },
        ),
        migrations.CreateModel(
            name='FakeUser',
            fields=[
                ('email', models.EmailField(db_column='email', max_length=254, primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='username', max_length=45, unique=True)),
                ('password', models.CharField(db_column='password', max_length=100)),
                ('name', models.CharField(db_column='name', max_length=100)),
                ('datejoined', models.DateField(blank=True, db_column='dateJoined', null=True)),
                ('lastmodifieddate', models.DateField(blank=True, db_column='lastModifiedDate', null=True)),
                ('lastmodifiedtime', models.TimeField(db_column='lastModifiedTime', null=True)),
                ('last_login', models.DateTimeField(blank=True, db_column='lastlogin', null=True)),
                ('is_superuser', models.BooleanField(db_column='admin', default=False)),
                ('is_staff', models.BooleanField(db_column='teacher', default=False)),
                ('isdisabled', models.BooleanField(db_column='isdisabled', default=False)),
                ('isaccepted', models.BooleanField(db_column='isaccepted', default=False)),
            ],
            options={
                'managed': False,
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('email', models.EmailField(db_column='email', max_length=254, primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='username', max_length=45, unique=True)),
                ('password', models.CharField(db_column='password', max_length=100)),
                ('name', models.CharField(db_column='name', max_length=100)),
                ('datejoined', models.DateField(blank=True, db_column='dateJoined', null=True)),
                ('lastmodifieddate', models.DateField(blank=True, db_column='lastModifiedDate', null=True)),
                ('lastmodifiedtime', models.TimeField(db_column='lastModifiedTime', null=True)),
                ('last_login', models.DateTimeField(blank=True, db_column='lastlogin', null=True)),
                ('is_superuser', models.BooleanField(db_column='admin', default=False)),
                ('is_staff', models.BooleanField(db_column='teacher', default=False)),
                ('isdisabled', models.BooleanField(db_column='isdisabled', default=False)),
                ('isaccepted', models.BooleanField(db_column='isaccepted', default=False)),
                ('isdefault', models.BooleanField(db_column='isdefault', default=False)),
                ('acceptedby', models.ForeignKey(db_column='acceptedBy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AB', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-lastmodifieddate', '-lastmodifiedtime'],
                'swappable': 'AUTH_USER_MODEL',
                'verbose_name_plural': 'Users',
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('groupid', models.AutoField(db_column='groupID', primary_key=True, serialize=False)),
                ('groupname', models.CharField(db_column='groupName', max_length=45, unique=True)),
                ('datecreated', models.DateField(db_column='dateCreated', null=True)),
                ('timecreated', models.TimeField(db_column='timeCreated', null=True)),
                ('grouppoints', models.IntegerField(db_column='groupPoints', default=0, null=True)),
                ('lastmodifieddate', models.DateField(blank=True, db_column='lastModifiedDate', null=True)),
                ('lastmodifiedtime', models.TimeField(db_column='lastModifiedTime', null=True)),
                ('createdby', models.ForeignKey(db_column='createdBy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groupcreatedby', to=settings.AUTH_USER_MODEL)),
                ('groupleader', models.ForeignKey(db_column='groupLeader', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groupleader', to=settings.AUTH_USER_MODEL)),
                ('lastmodifiedby', models.ForeignKey(blank=True, db_column='lastModifiedBy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='GLMB', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Groups',
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('groupid', models.ForeignKey(db_column='groupID', on_delete=django.db.models.deletion.CASCADE, to='accounts.Group')),
                ('studentid', models.ForeignKey(db_column='studentID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'StudentGroups',
                'db_table': 'StudentGroup',
            },
        ),
        migrations.CreateModel(
            name='UserClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userclass', models.CharField(db_column='class', max_length=45, unique=True)),
                ('studentcount', models.PositiveIntegerField(db_column='studentcount', default=0)),
                ('datecreated', models.DateField(db_column='dateCreated', null=True)),
                ('timecreated', models.TimeField(db_column='timeCreated', null=True)),
                ('createdby', models.ForeignKey(db_column='createdby', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ucCB', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'UserClass',
                'db_table': 'UserClass',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='lastmodifiedby',
            field=models.ForeignKey(blank=True, db_column='lastModifiedBy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='LMB', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='userclass',
            field=models.ForeignKey(blank=True, db_column='UserClass', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='UC', to='accounts.UserClass'),
        ),
    ]
